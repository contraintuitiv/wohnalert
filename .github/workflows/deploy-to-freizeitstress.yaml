name: Deploy Nextjs to freizeitstress.org

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm ci && npm run build

      - name: Dockerize
        run: |
          docker build -t ${{ vars.DOCKER_IMAGE_NAME }}:latest .
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker tag wohnalert:latest ghcr.io/${{ secrets.REGISTRY_USERNAME }}/${{ vars.REGISTRY_FOLDER }}/${{ vars.DOCKER_IMAGE_NAME }}:latest
          docker push ghcr.io/${{ secrets.REGISTRY_USERNAME }}/${{ vars.REGISTRY_FOLDER }}/${{ vars.DOCKER_IMAGE_NAME }}:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SSH to Server
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add GitHub and Server to Known Hosts on Runner
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-keyscan ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Pull from Github, build, dockerize and start
        run: |
          ssh -t ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /home/${{ secrets.SSH_USER }}/nodeapps
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker stop ${{ vars.DOCKER_IMAGE_NAME}} || true
            docker rm ${{ vars.DOCKER_IMAGE_NAME}} || true
            docker rmi ghcr.io/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_USERNAME }}/${{ vars.REGISTRY_FOLDER }}/${{ vars.DOCKER_IMAGE_NAME }}:latest || true
            docker pull ghcr.io/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_USERNAME }}/${{ vars.REGISTRY_FOLDER }}/${{ vars.DOCKER_IMAGE_NAME }}:latest
            docker run -d -p ${{vars.DOCKER_PORT}}:4541 --name ${{ vars.DOCKER_IMAGE_NAME}} ghcr.io/${{ secrets.REGISTRY_USERNAME }}/${{ vars.REGISTRY_FOLDER }}/${{ vars.DOCKER_IMAGE_NAME }}:latest
          EOF