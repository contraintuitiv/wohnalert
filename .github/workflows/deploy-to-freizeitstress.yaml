name: Deploy Nextjs to freizeitstress.org

on:
    push:
        branches:
            - pipeline
            - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
            node-version: '20'

      - name: Install Dependencies
        run: npm install


            # DOCKER_IMAGE_NAME: free to choose (default: github.repository)
            # GITHUB_TOKEN and actor are automatically set by Github
            # REGISTRY_USERNAME: Your github User name (default: github.actor = user of initial pipeline run)
            # REGISTRY_FOLDER: Your folder in the registry (default: github.repository = repository name)
      - name: Dockerize
        run: |
            docker build --build-arg DATABASE_URL=$DATABASE_URL --build-arg CD_API=$CD_API --build-arg CD_API_KEY=$CD_API_KEY --build-arg NTFY_HOST=$NTFY_HOST -t ${{ vars.DOCKER_IMAGE_NAME || github.repository }}:latest .
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker tag ${{ vars.DOCKER_IMAGE_NAME || github.repository }}:latest ghcr.io/${{ secrets.REGISTRY_USERNAME || github.actor }}/${{ vars.REGISTRY_FOLDER || github.repository }}/${{ vars.DOCKER_IMAGE_NAME || github.repository }}:latest
            docker push ghcr.io/${{ secrets.REGISTRY_USERNAME || github.actor }}/${{ vars.REGISTRY_FOLDER || github.repository }}/${{ vars.DOCKER_IMAGE_NAME || github.repository }}:latest

  deploy:
      runs-on: ubuntu-latest
      needs: build
      steps:
          - name: Checkout repository
            uses: actions/checkout@v4

          - name: SSH to Server
            uses: webfactory/ssh-agent@v0.9.0
            with:
                ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

          - name: Add GitHub and Server to Known Hosts on Runner
            run: |
              mkdir -p ~/.ssh
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              ssh-keyscan ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

                - name: Pull from Github, build, dockerize and start
                  run: |
                      ssh -t ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
                        cd /home/${{ secrets.SSH_USER }}/dockerimages/${{ vars.DOCKER_IMAGE_NAME || github.repository }}
                        echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
                        printf "%s" "${{ secrets.ENV }}" > .env
                        docker compose down
                        docker compose pull
                        docker compose up -d
                      EOF
