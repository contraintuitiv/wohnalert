name: Deploy Nextjs to freizeitstress.org

# Controls when the action will run. Triggers the workflow on push
on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '20'

            - name: Build
              run: npm ci && npm run build

              # DOCKER_IMAGE_NAME: free to choose (default: github.repository)
              # GITHUB_TOKEN and actor are automatically set by Github
              # REGISTRY_USERNAME: Your github User name (default: github.actor = user of initial pipeline run)
              # REGISTRY_FOLDER: Your folder in the registry (default: github.repository = repository name)
            - name: Dockerize
              run: |
                  docker build -t ${{ vars.DOCKER_IMAGE_NAME || github.repository }}:latest .
                  echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
                  docker tag wohnalert:latest ghcr.io/${{ secrets.REGISTRY_USERNAME || github.actor }}/${{ vars.REGISTRY_FOLDER || github.repository }}/${{ vars.DOCKER_IMAGE_NAME || github.repository }}:latest
                  docker push ghcr.io/${{ secrets.REGISTRY_USERNAME || github.actor }}/${{ vars.REGISTRY_FOLDER || github.repository }}/${{ vars.DOCKER_IMAGE_NAME || github.repository }}:latest

    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: SSH to Server
              uses: webfactory/ssh-agent@v0.5.3
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

            - name: Add GitHub and Server to Known Hosts on Runner
              run: |
                  mkdir -p ~/.ssh
                  ssh-keyscan github.com >> ~/.ssh/known_hosts
                  ssh-keyscan ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

            - name: Pull from Github, build, dockerize and start
              run: |
                  ssh -t ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
                    cd /home/${{ secrets.SSH_USER }}/nodeapps
                    echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
                    docker stop ${{ vars.DOCKER_IMAGE_NAME || github.repository}} || true
                    docker rm ${{ vars.DOCKER_IMAGE_NAME || github.repository}} || true
                    docker rmi ghcr.io/${{ secrets.REGISTRY_USERNAME || github.actor }}/${{ secrets.REGISTRY_USERNAME || github.actor }}/${{ vars.REGISTRY_FOLDER || github.repository }}/${{ vars.DOCKER_IMAGE_NAME || github.repository }}:latest || true
                    docker pull ghcr.io/${{ secrets.REGISTRY_USERNAME || github.actor }}/${{ secrets.REGISTRY_USERNAME || github.actor }}/${{ vars.REGISTRY_FOLDER || github.repository }}/${{ vars.DOCKER_IMAGE_NAME || github.repository }}:latest
                    docker run -d -p ${{vars.DOCKER_PORT || 4541}}:4541 --name ${{ vars.DOCKER_IMAGE_NAME || github.repository}} ghcr.io/${{ secrets.REGISTRY_USERNAME || github.actor }}/${{ vars.REGISTRY_FOLDER || github.repository }}/${{ vars.DOCKER_IMAGE_NAME || github.repository }}:latest
                  EOF
